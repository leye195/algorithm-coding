투 포인터, 구간 합

[투 포인터] O(N)
리스트에 순차적으로 접근해야 할 때 두 개의 점을 이용해 위치를 기록하며 계산

과정:
1.시작(start)과 끝(end)을 첫 원소의 인덱스(0)를 가리키게 한다
2.현재 부분 합이 M이 된다면 카운트
3.현재 부분 합이 M보다 작다면 end 증가
4.현재 부분 합이 M보다 같거나 크가면 st 증가
5.모든 경우를 확인할때까지 2번 부터 4번까지 과정 반복
```
구현 코드
n,m = 5,5
data=[1,2,3,5,5]
result,en,summary = 0,0,0
for start in range(len(data)):
    while(summary<m and end<n):#end를 가능한 만큼 이동
        summary+=data[en]
        en+=1
    if summary==m: #합이 m인 경우, 카운트
        result+=1
    summary-=data[start]

```

[구간 합] (Prefix Sum): 배열의 맨 앞부터 특정 위치까지 합을 미리 구해놓는것
- Prefix Sum을 계산해 배열에 저장
- 매 M개의 쿼리 정보를 확인시, 구간의 합은 *P[R]-P[L-1]*
```
ex)
data = [1,2,3,4,5]
p = [0,1,3,6,10,15] (Prefix Sum)
L=2,R=4 인 경우, answer = P[4]-P[1] = 9

n=5
summary = 0
prefix_sum = [0]
for i in range(len(data)):
    prefix_sum.append(prefix_sum[-1]+data[i])
print(prefix_sum[right]-prefix_sum[left-1])
```
