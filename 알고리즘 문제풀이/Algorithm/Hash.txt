해쉬?
해쉬는 임의의 크기를 가진 데이터를 고정된 데이터의 크기로 변환시키는 것을 말함
즉, 해쉬 알고리즘은 해쉬를 하는 방벱에 대해 절차적으로 명세함
이를 이용해 특정한 배열의 index or 위치를 입력하고자 하는 데이터의 값을 이용해 저장하거나
찾을수 있음
(즉시 저장하거나 찾고자하는 위치를 참조할 수 있어 더 빠른 속도로 처리 가능)

-Direct Addressing Table
key-value쌍의 데이터를 배열에 저장할 key값을 직접적으로 배열의 인덱스로 
사용하는 방법
ex) key값이 400인 data가 있다면, 배열의 인덱스가 400인 위치에 키 값을
저장하고 포인터로 데이터를 연결한다.
같은 키 값이 존재하지 않는다고 한다면 삽입시, 각 키마다 자신의 공간이 존재해
그 위치에 저장을 하면 됨
삭제 시에는 해당 키의 위치에 null을 넣어주면 됨.
탐색시에는 키의 위치를 찾아가서 참조하면 됨
(찾고자하는 데이터의 key값만 알고있으면 즉시 위피를 찾는것이 가능하므로
탐색,저장,삭제,갱신은 모두 O(1)로 매우 빠름)
*다만, key값의 최대 크기 만틈 배열이 할당되기 때문, 크기가 매우 큰데,
저장하고자 하는 데이터가 적다면 큰 낭비임.

-Hash Table
key-value쌍에서 key값을 테이블에 저장할 때 key값을 함수를 이용해
계산을 수행, 결과값을 배열의 인덱스로 사용하여 저장하는 방식
key값을 계산하는 함수는 [해쉬함수]이며 해쉬함수는 입력으로 key를 받으며,
0부터 배열의 크기-1 사이의 값을 출력함.
k값이 h(k)로 해쉬 되었다고 하며, h(k)는 k의 해쉬값이라고 함
Direct Addressing Table 보다는 공간 낭비가 적음
이는 key값의 크기에 table의 크기가 좌우되는것이 아닌 h(k)만큼
공간에 저장되기 때문
*하지만 Hash Table은 '충돌'이 일어날수 있다는 문제점이 있음.
충돌은 다른 k값이 동일한 h(k) 값을 가져 동일한 위치에 저장되는 것.
ex) h(k1)==h(k2) 충돌 발생!!!
Hash Table에서 충돌을 방지하기 위해(완전히 방지는 못하지만)
최소화하는 방법이 필요

-Chaining [충돌을 허용하지만 최소화]
체이닝이란? 이름 그대로 데이터들을 포인터를 이용해 서로 체인형태로
엮어 나가는것, Hash Table에서 충돌이 발생하면, 그 위치에 있던 
data에 key값을 포인터로 뒤이어 연결함.
따라서 연결리스트 형태를 취하게 됨
*데이터가 많으면 많을수록 충돌 확률이 높아 연결리스트 탐색 확률도 증가,
적을수록 리스트 탐색 확률 감소

Simple uniform hash
충돌을 최소화하는 좋은 해쉬함수
1.계산된 해쉬값들은 0~배열 크기-1 사이의 범위를 '동일한 확률'로 골고루 나타냄
2.각각의 해쉬값들은 서로 연관성을 가지고있지 않고 독립적으로 생성

Division method
-대표적인 함수로 division method, modular 연산 방법을 이용
특정 key값을 어떤수로 나눈 나머지를 해쉬값으로 사용
ex)
m=100 이면 k mod m은 0~99 의 범위를 가짐,여기서 m의 값이 성능을 좌우하는데
m의 크기는 보통 k의 3배가 적당하고함(적재율 30%)

Open Addressing
모든 데이터를(key,data)를 table에 저장하는 방법
장점: 데이터를 직접 모두 읽어와, 포인터를 쓸일이 없음(오버헤드 방지됨)
-이 방법을 사용하면 Chaining을 이용할수 없음, 대신 
Liner probing을 이용해 충돌 방지 진행
key값으로 인덱스 계산시, 만약 충돌이 발생한다면 바로 다음 인덱스에 데이터를 
저장하는 방식. 다음으로 이동한 후 충돌이 여전히 발생한다면 
또 다시 다음 인덱스에 저장.
즉, 충돌이 일어나지 않을때 까지 다음 인덱스로 이동

ex)
m=11, k mod 11
h(89)=1,h(45)=1 충돌 발생 45를 2에 저장

h(k,i)=(k+i) mod m //매 충돌시 한 칸씩 이동
문제점: primary clustering, 충돌 발생시, 뒤에 데이터를 넣어 하나의 
데이터 덩어리를 이루기 때문에, 데이터들의 특정 위치에만 밀집하는 현상
[slot이 많아지면 탐색시간도 길어짐]
 
